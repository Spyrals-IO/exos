/** @type {import('eslint').Linter.Config} */
module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
    project: [
      `${__dirname}/tsconfig.json`
    ],
    tsconfigRootDir: __dirname,
  },
  env: {
    browser: true,
    es6: true,
    node: true
  },
  plugins: ['@typescript-eslint', 'import'],
  extends: ['eslint:recommended', 'plugin:import/recommended', 'plugin:import/typescript', 'plugin:@typescript-eslint/recommended', 'plugin:@typescript-eslint/recommended-requiring-type-checking',],
  globals: {globalThis: false},
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true,
        project: [
          `${__dirname}/tsconfig.json`
        ]
      }
    }
  },
  rules: {
    'arrow-body-style': ['error'],
    'eol-last': ['error'],
    'no-prototype-builtins': 0,
    'callback-return': [2, ['callback', 'cb', 'next', 'done']],
    complexity: [0, 11],
    curly: [2, 'multi-line'],
    'jsx-quotes': 1,
    'max-depth': [1, 4],
    'max-statements': [2, 30],
    'no-array-constructor': [2],
    'no-cond-assign': 2,
    'no-console': [2, { allow: ['warn', 'error', 'debug', 'info'] }],
    'no-const-assign': 2,
    'no-constant-condition': 2,
    'no-debugger': 2,
    'no-dupe-args': 2,
    'no-dupe-class-members': 2,
    'no-dupe-keys': 2,
    'no-else-return': 1,
    'no-empty': 2,
    'no-func-assign': 2,
    'no-irregular-whitespace': 2,
    'no-mixed-spaces-and-tabs': 2,
    'no-multi-spaces': 2,
    'no-restricted-globals': [
      2,
      { name: 'find', message: 'You are using window.find' },
      { name: 'name', message: 'you are using window.name' },
    ],
    'no-unsafe-negation': 2,
    'no-throw-literal': 2,
    'no-undef': 2,
    'no-undef-init': 2,
    'no-unexpected-multiline': 2,
    'no-unreachable': 2,
    'no-unused-vars': ['error', { argsIgnorePattern: '_' }],
    'no-useless-call': 0,
    'no-var': 2,
    'no-with': 2,
    'object-shorthand': 2,
    'prefer-arrow-callback': 2,
    'prefer-const': 2,
    'prefer-spread': 1,
    'prefer-template': 0,
    quotes: [2, 'single', { allowTemplateLiterals: true, avoidEscape: true }],
    radix: 2,
    'react/display-name': 0,
    'react/forbid-prop-types': 0,
    'react/jsx-boolean-value': 2,
    'react/jsx-handler-names': 0,
    'react/jsx-key': 2,
    'react/jsx-max-props-per-line': 0,
    'react/jsx-no-bind': 0,
    'react/jsx-no-duplicate-props': 2,
    'react/jsx-no-literals': 0,
    'react/jsx-no-undef': 2,
    'react/jsx-pascal-case': 2,
    'react/jsx-sort-props': [2, { ignoreCase: true }],
    'react/jsx-uses-react': 2,
    'react/jsx-uses-vars': 2,
    'react/no-danger': 2,
    'react/no-deprecated': 0,
    'react/no-did-mount-set-state': 0,
    'react/no-did-update-set-state': 2,
    'react/no-direct-mutation-state': 2,
    'react/no-multi-comp': 0,
    'react/no-set-state': 0,
    'react/no-unknown-property': 2,
    'react/prefer-es6-class': 2,
    'react/self-closing-comp': 2,
    'react/sort-comp': 2,
    'react/jsx-wrap-multilines': 2,
    'react-hooks/rules-of-hooks': 2,
    'react-hooks/exhaustive-deps': 1,
    'import/no-named-as-default-member': 0,
    'import/no-named-as-default': 0,
    'import/no-duplicates': 'error',
    'import/order': [
      'error',
      {
        groups: ['type', 'builtin', 'external', 'internal', 'parent', 'sibling', 'index', 'object'],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
        },
      },
    ],
    'sort-imports': [
      'error',
      {
        ignoreDeclarationSort: true,
      },
    ],
    'spaced-comment': 'error',
    'no-undefined': 0,
    'react/prop-types': 0,
    '@typescript-eslint/no-misused-promises': [
      'error',
      {
        checksVoidReturn: false,
      },
    ],
    'react/react-in-jsx-scope': 0,
    '@typescript-eslint/no-unnecessary-type-assertion': 0,
        'no-fallthrough': 0,
        '@typescript-eslint/explicit-module-boundary-types': [
          'error',
          {
            allowHigherOrderFunctions: true,
            allowDirectConstAssertionInArrowFunctions: true,
            allowArgumentsExplicitlyTypedAsAny: true,
            allowTypedFunctionExpressions: true,
          },
        ],
        '@typescript-eslint/unbound-method': 0,
        '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '_' }],
        '@typescript-eslint/consistent-type-imports': 2,
        '@typescript-eslint/no-unsafe-return': 2,
        '@typescript-eslint/no-unsafe-assignment': 2,
        'eqeqeq': ['error','always'],
  },
};
